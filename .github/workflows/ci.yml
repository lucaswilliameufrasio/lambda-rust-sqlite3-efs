name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened, ready_for_review]

env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    if: github.event.pull_request.draft == false

    name: Build and run all tests

    runs-on: ubuntu-latest

    strategy:
      matrix:
        toolchain:
          - 1.76
      
    env:
      DATABASE_URL: sqlite:users.db
      DATABASE_PATH: ./users.db

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Configure sccache env vars
        run: |
          echo "RUSTC_WRAPPER=sccache" >> $GITHUB_ENV
          echo "SCCACHE_GHA_ENABLED=true" >> $GITHUB_ENV

      - name: Run sccache-cache
        uses: mozilla-actions/sccache-action@v0.0.3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ matrix.toolchain }}
          components: clippy, rustfmt

      - name: Install SQLX CLI
        run: sqlx database help || cargo install sqlx-cli --no-default-features --features native-tls,sqlite

      - name: Run migrations
        run: |
          sqlx db create
          sqlx migrate run
          cargo sqlx prepare -- --all-targets --all-features

      - name: Lint
        run: |
          cargo fmt --all -- --check
          cargo clippy -- -D warnings

      - name: Create .env file
        run: cp .env.example .env

      - name: Build
        run: cargo build --verbose

      - name: Run tests
        run: cargo test --verbose
